'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','section'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/posts/golang/%E5%9F%BA%E7%A1%80/%E5%AF%BC%E5%85%A5/','title':"golang基础|导入",'section':"基础",'content':"golang语言，快速写出高效率的代码。\n编程语言分类 #  按编译及运行方式分类\n 按编译类型划分，编程语言分为三种，编译型、解释型和混合型。编译型语言效率更高，性能更好。\n😊编译型语言将代码由编译器编为二进制运行，常见的如C/C++、Golang。\n😊解释型语言运行时通过解释器在线翻译代码为处理器认识的二进制运行，常见的解释型语言有Python、PHP、JS、SQL、R。\n😊混合型语言指的是运行时先编译为中间代码，再解释执行，常见的有Java、C#、Visual Basic、.Net。\n 按程序设计方法分类\n 按程序设计方法分为面向过程、面向对象和面向接口编程。\n😊面向过程：C 😊面向对象：Java、C#、Python等 😊面向接口：Golang\n go环境搭建 #  1、下载并安装需要版本的glang Go官方镜像站；\n2、设置GOROOT环境变量为上一步安装目录，并将$GOROOT/bin 加入系统环境变量；\n3、在适当位置建立workspace(里面包含bin、pkg、src目录)文件夹，设置GOPATH为workspace目录(新版本go可不设置)；\n4、命令行执行go version看到所安装版本的go版本即为安装成功。\n推荐使用免费的IDE VSCode，下载安装后需要再安装插件和所需扩展。\n包管理 #  基本设置 #  从go 1.14开始，默认使用go module 作为包管理工具。要启用go module，需设置GO111MODULE和GOPROXY，对其解释如下。\nGO111MODULE：\n 1、GO111MODULE=off禁用模块支持，编译时会从GOPATH和vendor文件夹中查找包。\n2、GO111MODULE=on启用模块支持，编译时忽略GOPATH和vendor文件夹，根据 go.mod下载依赖。\n3、GO111MODULE=auto，当项目在$GOPATH/src外且项目根目录有go.mod文件时，开启模块支持。\n GOPROXY：\nGo1.13之后GOPROXY默认值为https://proxy.golang.org，在国内是无法访问的，所以需设置GOPROXY\ngo env -w GOPROXY=https://goproxy.cn,direct \n终端执行go help mod 即可查看其用法。\n go mod download 下载依赖的module到本地cache（默认为$GOPATH/pkg/mod目录）\ngo mod edit 编辑go.mod文件\ngo mod graph 打印模块依赖图\ngo mod init 初始化当前文件夹, 创建go.mod文件\ngo mod tidy 增加缺少的module，删除无用的module\ngo mod vendor 将依赖复制到vendor下\ngo mod verify 校验依赖\ngo mod why 解释为什么需要依赖\n go.mod文件 #  go mod文件记录了项目需要的依赖信息，其支持三种格式的引用，大致结构如下：\nmodule github.com/codemgo/test\rgo 1.16\rrequire (\r//三种引入方式：语义化版本号 + git的分支或tag + git提交hash值\rgopkg.in/vmihailenco/msgpack.v2 v2.9.1\rgopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7\rgithub.com/tatsushid/go-fastping v0.0.0-20160109021039-d7bb493dee3e\r//间接引用\rgoogle.golang.org/appengine v1.6.1 // indirect\r)\rreplace (\rgopkg.in/vmihailenco/msgpack.v2 v2.9.1 =\u0026gt; gopkg.in/vmihailenco/msgpack.v2 v2.9.3\rgolang.org/x/text =\u0026gt; github.com/golang/text v0.3.0\r)\r跨平台编译 #  go语言支持跨平台编译，如Linux编译Windows可执行文件： CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build\nGOOS：目标平台的操作系统（darwin、freebsd、linux、windows）\nGOARCH：目标平台的体系架构（386、amd64、arm）\n交叉编译不支持 CGO 所以要禁用它。\n 本文参考：\n 李文周的博客\n"});index.add({'id':1,'href':'/posts/tools/hugo/','title':"Hugo+Github搭建个人博客",'section':"tools",'content':"Hugo是基于Go语言编写的静态博客框架，利用它结合Github Pages可以很容易的搭建出个人博客。\nHugo安装 #  Windows系统下安装步骤如下：\n1.打开网站 https://github.com/gohugoio/hugo/releases\r2.下载 hugo_x.xx.x_Windows-64bit.zip\r3.解压然后安装到某文件夹内\r4.将 hugo.exe 所在文件夹添加至Path环境变量\r5.hugo version 验证是否安装成功\r问题：因为众所周知的原因可能下载不成功。\n其它问题等请参考 Hugo官网\nhugo命令 #  使用方法:\rhugo\rhugo [flags]\rhugo [command]\rhugo [command] [flags]\r节选的 command:\rnew 为你的站点创建新的内容\rserver 一个高性能的web服务器\r节选的 flags:\r-D, --buildDrafts 包括被标记为draft的文章\r-E, --buildExpired 包括已过期的文章\r-F, --buildFuture 包括将在未来发布的文章\r举几个栗子:\rhugo -D 生成静态文件并包括draft为true文章\rhugo new post/new-content.md 新建一篇文章\rhugo new site mysite 新建一个称为mysite的站点\rhugo server -D 启动服务器并包括draft为true文章\r建立站点 #  将会在运行此命令的位置新建一个名为myblog的站点：\nhugo new site myblog\r生成的站点目录及作用是：\n.\r├── archetypes 储存.md的模板文件default.md\r├── content 存放所有的博客文章（.md文件）\r├── data 储存数据文件供模板调用\r├── layouts 存放的是站点的模板文件\r├── static 存放js/css/img等静态资源\r├── themes 存放站点的主题\r└── config.toml 配置文件\r注意： 此处archetypes、layouts和static文件夹的优先级高于主题下的同名文件夹。当需要稍稍修改主题时，复制到根目录下的对应文件夹再修改，则日后无git冲突问题。\n此外，执行hugo命令后，还会生成一个用于储存生成静态文件的public文件夹。\n添加主题 #  hugo主题非常多，如站点使用的是even主题，在博客根目录下执行：\n$ git clone https://github.com/olOwOlo/hugo-theme-even themes/even\r每个主题都会有不同的参数配置，将 themes/even/exampleSite/config.toml 复制到博客根目录下进行自定义配置。\n新建文章 #  新建文章的代码为：\nhugo new post/my-first-post.md\r可通过 front-matter 针对每一篇文章单独进行设置，themes/even/archetypes/default.md 文件陈列了所有可用的参数，通常将该文件复制到站点根目录archetypes文件夹下并根据需要配置。如本站点的 front-matter 为：\n---\rtitle: \u0026quot;{{ replace .TranslationBaseName \u0026quot;-\u0026quot; \u0026quot; \u0026quot; | title }}\u0026quot;\rdate: {{ .Date }}\rdraft: true\rdescription: \u0026quot;\u0026quot;\rtags: []\rcategories: []\r---\r摘要部分\r\u0026lt;!--more--\u0026gt;\rPS: Hugo的配置文件和文章中引用图片都是从static作为根目录的。\n运行站点 #  hugo server -t even --buildDrafts\ror\rhugo server --theme=even --buildDrafts\ror\rhugo server -D\rPS: 若config.toml指定了theme可省略参数，\u0026ndash;buildDrafts参数目的是指定编译draft为true的文章。\n在站点根目录下运行此命令后，即可通过http://localhost:1313/访问博客站点。\n发布到Github #  首先要创建一个Github仓库且名字为IDName.github.io，然后执行以下命令生成静态网站（public文件夹下）：\nhugo --theme=even --baseUrl=\u0026quot;https://IDName.github.io\u0026quot; --buildDrafts\rPS: 若config.toml指定了theme或baseUrl参数则此处可省略。\n然后依次执行以下命令：\ncd public\rgit init\rgit add .\rgit commit -m \u0026quot;我的hugo博客第一次提交\u0026quot;\r#关联远端仓库\rgit remote add origin https://github.com/IDName/IDName.github.io.git\rgit push -u origin master\r注意这里有个问题是当每次本地写完博客后都需要提交至远程仓库，特别繁琐。故可以创建deploy.bat批处理文件自动执行：\n::表示进入E盘\re:\rcd E:\\GoLang\\myblog\rhugo --theme=even --baseUrl=\u0026quot;https://IDName.github.io\u0026quot; --buildDrafts\rcd public\r::git init 注释\rgit add .\rgit commit -m \u0026quot;updated\u0026quot;\rgit push\rcd ..\rpause\r针对自己博客源地址进行相应修改即可。\nPS: linux系统可编写makefile文件自动执行脚本。有条件的也可购买云服务器部署博客。\n绑定个人域名 #    首先得有自己的域名，有了域名之后进行CNAME解析至https://IDName.github.io;\n  点击IDName.github.io仓库，在settings下的GitHub Pages中填写自己域名并保存，或直接在code页面中创建CNAME文件并填写自己域名。\n  PS：这里有个问题，当在本地public文件夹下git push出错时可能是由于修改了远程github仓，此时可以先git pull，然后在重新生成public并执行deploy.bat文件。\n 本文参考： olOwOlo的个人博客 HUGO主题book HUGO中文文档\n"});index.add({'id':2,'href':'/posts/tools/markdown/','title':"Markdown的基本语法",'section':"tools",'content':"第一篇正式文章吧，记录Markdown的用法。\n标题 #  使用 # 号可表示 1-6 级标题：\n# 一级标题\r## 二级标题\r### 三级标题\r#### 四级标题\r##### 五级标题\r###### 六级标题\r段落格式 #  换行 #  行尾的两个以上空格加回车(换行) or 段落后使用一个空行(新段)。\n字体 #  *斜体文本*\r_斜体文本_\r**粗体文本**\r__粗体文本__\r***粗斜体文本***\r___粗斜体文本___\r斜体文本\n斜体文本\n粗体文本\n粗体文本\n粗斜体文本\n粗斜体文本\n分隔线 #  用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。\n***\r* * *\r- - -\r--------\r   删除线 #  BAIDU.COM\r~~BAIDU.COM~~\rBAIDU.COM\nBAIDU.COM\n下划线 #  \u0026lt;u\u0026gt;带下划线文本\u0026lt;/u\u0026gt;\r带下划线文本\n脚注 #  脚注是对文本的补充说明。\n创建脚注格式类似这样 [^RUNOOB]。\r[^RUNOOB]: 菜鸟教程 -- 学的不仅是技术，更是梦想！！！\r创建脚注格式类似这样 1。\n列表 #  无序列表 #  无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记：\n* 无序列表一\r+ 无序列表二\r- 无序列表二\r 无序列表一   无序列表二   无序列表三  有序列表 #  有序列表则使用数字接着一个英文句点：\n1. 有序列表一\r2. 有序列表二\r 有序列表一 有序列表二  列表嵌套 #  列表嵌套只需在子列表中的选项添加四个空格即可\n1. 第一项：\r- 第一项嵌套的第一个元素\r- 第一项嵌套的第二个元素\r2. 第二项：\r- 第二项嵌套的第一个元素\r- 第二项嵌套的第二个元素\r 第一项：  第一项嵌套的第一个元素 第一项嵌套的第二个元素   第二项：  第二项嵌套的第一个元素 第二项嵌套的第二个元素    区块 #  区块引用是在段落开头使用 \u0026gt; 符号 ，然后后面紧跟一个空格符号\nMarkdown 也允许你偷懒只在整个段落的第一行最前面加上 \u0026gt;\n引用的区块内也可使用其他的 Markdown 语法，包括标题、列表、代码区块等\n\u0026gt; 你是猪吗？孩子\r\u0026gt;\u0026gt; 是的 我是猪 我真的是猪\r 你是猪吗？孩子\n 是的 我是猪\n我真的是猪\n  代码 #  行内代码：用反引号\u0026quot;`\u0026ldquo;包括起来\n`printf()` 函数\rprintf() 函数\n多行代码：\n(1)代码区块使用一个制表符(不推荐，格式有点不正常)\n(2)用六个反引号```包裹代码(后面可跟上c/java/php/js/py/go/xml/html/matlab/go等等)\npackage main import \u0026#34;fmt\u0026#34; func main(){ fmt.Println(\u0026#34;Hello,World!\u0026#34;); } 链接 #  超链接 #  [链接名称](链接地址 \u0026quot;链接标题，可不加\u0026quot;)\ror\r\u0026lt;链接地址\u0026gt;\ror\r[链接文字][链接标记]\r在文本的任意位置添加\r[链接标记]:链接地址 \u0026quot;链接标题\u0026quot;\r 百度一下\n锚点 #  锚点其实就是页内超链接，实现快速跳到页面指定位置：\n目的地{#index}\r[跳转](#index)\r目的地{#dst}\n跳转\n图片 #  ![alt 属性文本](图片地址)\ror\r![alt 属性文本](图片地址 \u0026quot;可选标题\u0026quot;)\ror\r![alt 属性文本][标记]\r在文本的任意位置添加\r[标记]:图片地址 \u0026quot;可选标题\u0026quot;\r[alt 属性文本]其实是图片未正常显示时的替换文字。\n 表格 #  第一行为表头，第二行分隔表头和主体部分\n使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。\n左对齐 | 右对齐 | 居中对齐\r:-----| ----: | :----:\r单元格 | 单元格 | 单元格\r单元格 | 单元格 | 单元格\r   左对齐 右对齐 居中对齐     单元格 单元格 单元格   单元格 单元格 单元格    高级技巧 #  html原始码 #  在代码区块里面， \u0026amp; 、 \u0026lt; 和 \u0026gt; 会自动转成 HTML 实体\n\u0026lt;div class=\u0026quot;footer\u0026quot;\u0026gt;\r© 2004 Foo Corporation\r\u0026lt;/div\u0026gt;\r© 2004 Foo Corporation\r\r转义 #  \\ 反斜线\r` 反引号\r* 星号\r_ 下划线\r{} 花括号\r[] 方括号\r() 小括号\r# 井字号\r+ 加号\r- 减号\r. 英文句点\r! 感叹号\r公式 #  行内公式：\n$E=mc^2$\r$E=mc^2$\n多行公式：\n$$E=mc^2$$\r$$E=mc^2$$\ntips #  ❤ 使用Typora可以更加方便的编写markdown文档，而不用手写代码，强力推荐。\n中文官网\n用法参考\n  菜鸟教程 \u0026ndash; 学的不仅是技术，更是梦想！！！ \u0026#x21a9;\u0026#xfe0e;\n  "});index.add({'id':3,'href':'/posts/list/','title':"总览",'section':"Posts",'content':"本博客计划技能图谱如下，脑图中分类对应博客的分类，不断补充中\u0026hellip;\u0026hellip;..\n "});index.add({'id':4,'href':'/posts/About/','title':"About",'section':"Posts",'content':"一个爱好编程的大男孩。\n 爱好骑行，爬山，音乐和漫无目的走在大街上。\n 意见和交流请邮件 meng_zhao@foxmail.com.\n"});})();